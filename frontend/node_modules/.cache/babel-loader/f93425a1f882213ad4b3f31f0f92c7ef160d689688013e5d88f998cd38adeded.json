{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\CreateTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CONFIG from \"../config\";\nimport { logFrontendEvent } from \"../utils/logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTaskForm({\n  refreshTasks,\n  currentUser\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState(\"blue\");\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [coOwners, setCoOwners] = useState(\"\");\n  const [allUsernames, setAllUsernames] = useState([]);\n  useEffect(() => {\n    // Fetch all existing usernames for autofill\n    axios.get(`${CONFIG.BACKEND_URL}/users/all`).then(res => setAllUsernames(res.data)).catch(err => console.error(\"Error fetching usernames:\", err));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const taskData = {\n        title,\n        description,\n        color,\n        is_private: isPrivate,\n        owner_username: currentUser.username,\n        co_owners: coOwners // Expect comma-separated usernames\n      };\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks`, taskData);\n      setTitle(\"\");\n      setDescription(\"\");\n      setColor(\"blue\");\n      setIsPrivate(false);\n      setCoOwners(\"\");\n      refreshTasks();\n      logFrontendEvent(`Task created: ${title} by ${currentUser.username}`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error creating task:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Error creating task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description (optional)\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: color,\n        onChange: e => setColor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blue\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"green\",\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"red\",\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yellow\",\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isPrivate,\n          onChange: e => setIsPrivate(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"Private Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Co-owners (comma separated)\",\n        value: coOwners,\n        onChange: e => setCoOwners(e.target.value),\n        list: \"usernames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"usernames\",\n        children: allUsernames.map((uname, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: uname\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTaskForm, \"i020uHhacHwGYER2yFXxShordjo=\");\n_c = CreateTaskForm;\nexport default CreateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","CONFIG","logFrontendEvent","jsxDEV","_jsxDEV","CreateTaskForm","refreshTasks","currentUser","_s","title","setTitle","description","setDescription","color","setColor","isPrivate","setIsPrivate","coOwners","setCoOwners","allUsernames","setAllUsernames","get","BACKEND_URL","then","res","data","catch","err","console","error","handleSubmit","e","preventDefault","taskData","is_private","owner_username","username","co_owners","post","_error$response","_error$response$data","alert","response","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","checked","list","id","map","uname","index","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/CreateTaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CONFIG from \"../config\";\r\nimport { logFrontendEvent } from \"../utils/logger\";\r\n\r\nfunction CreateTaskForm({ refreshTasks, currentUser }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [color, setColor] = useState(\"blue\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [coOwners, setCoOwners] = useState(\"\");\r\n  const [allUsernames, setAllUsernames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch all existing usernames for autofill\r\n    axios.get(`${CONFIG.BACKEND_URL}/users/all`)\r\n      .then(res => setAllUsernames(res.data))\r\n      .catch(err => console.error(\"Error fetching usernames:\", err));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const taskData = {\r\n        title,\r\n        description,\r\n        color,\r\n        is_private: isPrivate,\r\n        owner_username: currentUser.username,\r\n        co_owners: coOwners // Expect comma-separated usernames\r\n      };\r\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks`, taskData);\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setColor(\"blue\");\r\n      setIsPrivate(false);\r\n      setCoOwners(\"\");\r\n      refreshTasks();\r\n      logFrontendEvent(`Task created: ${title} by ${currentUser.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n      alert(error.response?.data?.detail || \"Error creating task\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-task-form\">\r\n      <h2>Create a New Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"Description (optional)\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n        <select value={color} onChange={(e) => setColor(e.target.value)}>\r\n          <option value=\"blue\">Blue</option>\r\n          <option value=\"green\">Green</option>\r\n          <option value=\"red\">Red</option>\r\n          <option value=\"yellow\">Yellow</option>\r\n        </select>\r\n        <label>\r\n          <input type=\"checkbox\" checked={isPrivate} onChange={(e) => setIsPrivate(e.target.checked)} />\r\n          Private Task\r\n        </label>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Co-owners (comma separated)\" \r\n          value={coOwners} \r\n          onChange={(e) => setCoOwners(e.target.value)} \r\n          list=\"usernames\"\r\n        />\r\n        <datalist id=\"usernames\">\r\n          {allUsernames.map((uname, index) => (\r\n            <option key={index} value={uname} />\r\n          ))}\r\n        </datalist>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}