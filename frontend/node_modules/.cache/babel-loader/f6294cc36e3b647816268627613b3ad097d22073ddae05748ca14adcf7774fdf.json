{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Board from \"./components/Board\";\nimport Feed from \"./components/Feed\";\nimport CreateTaskForm from \"./components/CreateTaskForm\";\nimport SettingsPage from \"./components/SettingsPage\";\nimport { useConfirmDone } from \"./hooks/useConfirmDone\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [stories, setStories] = useState([]);\n\n  // Use the custom hook for confirming \"Done\"\n  const {\n    confirmDoneChoice,\n    confirmDone,\n    setConfirmDone\n  } = useConfirmDone();\n  useEffect(() => {\n    fetchTasks();\n    fetchStories();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/tasks/\");\n      setTasks(res.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  const fetchStories = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/stories/\");\n      setStories(res.data);\n    } catch (error) {\n      console.error(\"Error fetching stories:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gamified Task Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        refreshTasks: fetchTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        tasks: tasks,\n        refreshTasks: fetchTasks,\n        fetchStories: fetchStories,\n        confirmDoneChoice: confirmDoneChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Feed, {\n        stories: stories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingsPage, {\n        confirmDone: confirmDone,\n        setConfirmDone: setConfirmDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"opkRQmzsP6vfggH6HoyqvFPHThU=\", false, function () {\n  return [useConfirmDone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Board","Feed","CreateTaskForm","SettingsPage","useConfirmDone","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","stories","setStories","confirmDoneChoice","confirmDone","setConfirmDone","fetchTasks","fetchStories","res","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshTasks","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Board from \"./components/Board\";\r\nimport Feed from \"./components/Feed\";\r\nimport CreateTaskForm from \"./components/CreateTaskForm\";\r\nimport SettingsPage from \"./components/SettingsPage\";\r\nimport { useConfirmDone } from \"./hooks/useConfirmDone\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stories, setStories] = useState([]);\r\n  \r\n  // Use the custom hook for confirming \"Done\"\r\n  const { confirmDoneChoice, confirmDone, setConfirmDone } = useConfirmDone();\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchStories();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8000/tasks/\");\r\n      setTasks(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchStories = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8000/stories/\");\r\n      setStories(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching stories:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Gamified Task Portal</h1>\r\n      </header>\r\n      <main>\r\n        <CreateTaskForm refreshTasks={fetchTasks} />\r\n        <Board\r\n          tasks={tasks}\r\n          refreshTasks={fetchTasks}\r\n          fetchStories={fetchStories}\r\n          confirmDoneChoice={confirmDoneChoice}\r\n        />\r\n        <Feed stories={stories} />\r\n        <SettingsPage\r\n          confirmDone={confirmDone}\r\n          setConfirmDone={setConfirmDone}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}