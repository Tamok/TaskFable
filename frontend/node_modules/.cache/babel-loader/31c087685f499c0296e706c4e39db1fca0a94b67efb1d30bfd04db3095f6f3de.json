{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  task,\n  refreshTasks,\n  user\n}) {\n  _s();\n  const [commentText, setCommentText] = useState(\"\");\n\n  // Define allowed transitions based on the current status\n  let availableStatuses = [];\n  if (task.status === \"To-Do\") {\n    availableStatuses = [\"Doing\"];\n  } else if (task.status === \"Doing\") {\n    availableStatuses = [\"Waiting\", \"Done\"];\n  } else if (task.status === \"Waiting\") {\n    availableStatuses = [\"Doing\", \"Done\"];\n  } else if (task.status === \"Done\") {\n    availableStatuses = [];\n  }\n  const handleStatusChange = async newStatus => {\n    try {\n      await axios.put(`http://localhost:8000/tasks/${task.id}/status`, {\n        new_status: newStatus,\n        username: user.username\n      });\n      refreshTasks();\n    } catch (error) {\n      console.error(\"Error updating task status:\", error);\n    }\n  };\n  const handleAddComment = async () => {\n    if (!commentText) return;\n    try {\n      await axios.post(\"http://localhost:8000/tasks/comment\", {\n        task_id: task.id,\n        content: commentText,\n        username: user.username\n      });\n      setCommentText(\"\");\n      refreshTasks();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n\n  // If the task is private and the current user is not the owner, obfuscate the description\n  const isOwner = task.owner_id === user.user_id;\n  const displayDescription = task.is_private && !isOwner ? \"Solo Adventure\" : task.description;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${task.color}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: displayDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-actions\",\n      children: availableStatuses.map(status => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStatusChange(status),\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), task.comments && task.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.owner_username || \"Anonymous\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), \" \", comment.content]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"p4TF37JcSOEexXz8bq9p43U5U1Q=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Card","task","refreshTasks","user","_s","commentText","setCommentText","availableStatuses","status","handleStatusChange","newStatus","put","id","new_status","username","error","console","handleAddComment","post","task_id","content","isOwner","owner_id","user_id","displayDescription","is_private","description","className","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","comments","comment","owner_username","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Card({ task, refreshTasks, user }) {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  // Define allowed transitions based on the current status\r\n  let availableStatuses = [];\r\n  if (task.status === \"To-Do\") {\r\n    availableStatuses = [\"Doing\"];\r\n  } else if (task.status === \"Doing\") {\r\n    availableStatuses = [\"Waiting\", \"Done\"];\r\n  } else if (task.status === \"Waiting\") {\r\n    availableStatuses = [\"Doing\", \"Done\"];\r\n  } else if (task.status === \"Done\") {\r\n    availableStatuses = [];\r\n  }\r\n\r\n  const handleStatusChange = async (newStatus) => {\r\n    try {\r\n      await axios.put(`http://localhost:8000/tasks/${task.id}/status`, {\r\n        new_status: newStatus,\r\n        username: user.username\r\n      });\r\n      refreshTasks();\r\n    } catch (error) {\r\n      console.error(\"Error updating task status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (!commentText) return;\r\n    try {\r\n      await axios.post(\"http://localhost:8000/tasks/comment\", {\r\n        task_id: task.id,\r\n        content: commentText,\r\n        username: user.username\r\n      });\r\n      setCommentText(\"\");\r\n      refreshTasks();\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  // If the task is private and the current user is not the owner, obfuscate the description\r\n  const isOwner = task.owner_id === user.user_id;\r\n  const displayDescription = task.is_private && !isOwner ? \"Solo Adventure\" : task.description;\r\n\r\n  return (\r\n    <div className={`card ${task.color}`}>\r\n      <h3>{task.title}</h3>\r\n      <p>{displayDescription}</p>\r\n      <div className=\"card-actions\">\r\n        {availableStatuses.map((status) => (\r\n          <button key={status} onClick={() => handleStatusChange(status)}>\r\n            {status}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"comments\">\r\n        <h4>Comments</h4>\r\n        {task.comments && task.comments.map((comment) => (\r\n          <div key={comment.id} className=\"comment\">\r\n            <strong>{comment.owner_username || \"Anonymous\"}:</strong> {comment.content}\r\n          </div>\r\n        ))}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment}>Add Comment</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}