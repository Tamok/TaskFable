{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\CreateTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CONFIG from \"../config\";\nimport { logFrontendEvent } from \"../utils/logger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTaskForm({\n  refreshTasks,\n  currentUser\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState(\"blue\");\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [selectedCoOwners, setSelectedCoOwners] = useState([]); // array of usernames\n  const [allUsernames, setAllUsernames] = useState([]);\n  useEffect(() => {\n    axios.get(`${CONFIG.BACKEND_URL}/users/all`).then(res => {\n      const others = res.data.filter(u => u !== currentUser.username);\n      setAllUsernames(others);\n    }).catch(err => console.error(\"Error fetching usernames:\", err));\n  }, [currentUser]);\n  const handleCheckboxChange = username => {\n    if (selectedCoOwners.includes(username)) {\n      setSelectedCoOwners(selectedCoOwners.filter(u => u !== username));\n    } else {\n      setSelectedCoOwners([...selectedCoOwners, username]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const coOwnersStr = selectedCoOwners.join(\",\");\n      const taskData = {\n        title,\n        description,\n        color,\n        is_private: isPrivate,\n        owner_username: currentUser.username,\n        co_owners: coOwnersStr\n      };\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks`, taskData);\n      setTitle(\"\");\n      setDescription(\"\");\n      setColor(\"blue\");\n      setIsPrivate(false);\n      setSelectedCoOwners([]);\n      refreshTasks();\n      logFrontendEvent(`Task created: ${title} by ${currentUser.username}`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error creating task:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Error creating task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description (optional)\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: color,\n        onChange: e => setColor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blue\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"green\",\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"red\",\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yellow\",\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isPrivate,\n          onChange: e => setIsPrivate(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \"Private Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Select Co-Owners:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), allUsernames.map((uname, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: uname,\n            checked: selectedCoOwners.includes(uname),\n            onChange: () => handleCheckboxChange(uname)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), uname]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTaskForm, \"cLsnGPl9E7Sn4NB+i1TRczoNLtg=\");\n_c = CreateTaskForm;\nexport default CreateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","CONFIG","logFrontendEvent","jsxDEV","_jsxDEV","CreateTaskForm","refreshTasks","currentUser","_s","title","setTitle","description","setDescription","color","setColor","isPrivate","setIsPrivate","selectedCoOwners","setSelectedCoOwners","allUsernames","setAllUsernames","get","BACKEND_URL","then","res","others","data","filter","u","username","catch","err","console","error","handleCheckboxChange","includes","handleSubmit","e","preventDefault","coOwnersStr","join","taskData","is_private","owner_username","co_owners","post","_error$response","_error$response$data","alert","response","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","checked","map","uname","index","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/CreateTaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CONFIG from \"../config\";\r\nimport { logFrontendEvent } from \"../utils/logger\";\r\n\r\nfunction CreateTaskForm({ refreshTasks, currentUser }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [color, setColor] = useState(\"blue\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [selectedCoOwners, setSelectedCoOwners] = useState([]); // array of usernames\r\n  const [allUsernames, setAllUsernames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${CONFIG.BACKEND_URL}/users/all`)\r\n      .then(res => {\r\n          const others = res.data.filter(u => u !== currentUser.username);\r\n          setAllUsernames(others);\r\n      })\r\n      .catch(err => console.error(\"Error fetching usernames:\", err));\r\n  }, [currentUser]);\r\n\r\n  const handleCheckboxChange = (username) => {\r\n      if (selectedCoOwners.includes(username)) {\r\n         setSelectedCoOwners(selectedCoOwners.filter(u => u !== username));\r\n      } else {\r\n         setSelectedCoOwners([...selectedCoOwners, username]);\r\n      }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const coOwnersStr = selectedCoOwners.join(\",\");\r\n      const taskData = {\r\n        title,\r\n        description,\r\n        color,\r\n        is_private: isPrivate,\r\n        owner_username: currentUser.username,\r\n        co_owners: coOwnersStr\r\n      };\r\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks`, taskData);\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setColor(\"blue\");\r\n      setIsPrivate(false);\r\n      setSelectedCoOwners([]);\r\n      refreshTasks();\r\n      logFrontendEvent(`Task created: ${title} by ${currentUser.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n      alert(error.response?.data?.detail || \"Error creating task\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-task-form\">\r\n      <h2>Create a New Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"Description (optional)\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n        <select value={color} onChange={(e) => setColor(e.target.value)}>\r\n          <option value=\"blue\">Blue</option>\r\n          <option value=\"green\">Green</option>\r\n          <option value=\"red\">Red</option>\r\n          <option value=\"yellow\">Yellow</option>\r\n        </select>\r\n        <label>\r\n          <input type=\"checkbox\" checked={isPrivate} onChange={(e) => setIsPrivate(e.target.checked)} />\r\n          Private Task\r\n        </label>\r\n        <div>\r\n          <h4>Select Co-Owners:</h4>\r\n          {allUsernames.map((uname, index) => (\r\n            <label key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={uname}\r\n                checked={selectedCoOwners.includes(uname)}\r\n                onChange={() => handleCheckboxChange(uname)}\r\n              />\r\n              {uname}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}