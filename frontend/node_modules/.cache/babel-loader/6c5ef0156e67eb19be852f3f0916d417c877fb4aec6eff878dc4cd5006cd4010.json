{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\SettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CONFIG from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SettingsPage({\n  currentUser,\n  refreshUser\n}) {\n  _s();\n  const [confirmDone, setConfirmDone] = useState(currentUser.confirm_done);\n  const handleToggle = async () => {\n    try {\n      const newSetting = !confirmDone;\n      await axios.put(`${CONFIG.BACKEND_URL}/users/${currentUser.username}/settings`, {\n        confirm_done: newSetting\n      });\n      setConfirmDone(newSetting);\n      refreshUser();\n    } catch (error) {\n      console.error(\"Error updating settings:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: confirmDone,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \"Always Confirm \\u201CDone\\u201D?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsPage, \"+DpBimPuXRvkbnr4XEBp67Pgv/A=\");\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","axios","CONFIG","jsxDEV","_jsxDEV","SettingsPage","currentUser","refreshUser","_s","confirmDone","setConfirmDone","confirm_done","handleToggle","newSetting","put","BACKEND_URL","username","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/SettingsPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CONFIG from \"../config\";\r\n\r\nfunction SettingsPage({ currentUser, refreshUser }) {\r\n  const [confirmDone, setConfirmDone] = useState(currentUser.confirm_done);\r\n\r\n  const handleToggle = async () => {\r\n    try {\r\n      const newSetting = !confirmDone;\r\n      await axios.put(`${CONFIG.BACKEND_URL}/users/${currentUser.username}/settings`, {\r\n        confirm_done: newSetting\r\n      });\r\n      setConfirmDone(newSetting);\r\n      refreshUser();\r\n    } catch (error) {\r\n      console.error(\"Error updating settings:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <h2>Settings</h2>\r\n      <label>\r\n        <input type=\"checkbox\" checked={confirmDone} onChange={handleToggle} />\r\n        Always Confirm “Done”?\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,YAAYA,CAAC;EAAEC,WAAW;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACM,WAAW,CAACK,YAAY,CAAC;EAExE,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,UAAU,GAAG,CAACJ,WAAW;MAC/B,MAAMR,KAAK,CAACa,GAAG,CAAC,GAAGZ,MAAM,CAACa,WAAW,UAAUT,WAAW,CAACU,QAAQ,WAAW,EAAE;QAC9EL,YAAY,EAAEE;MAChB,CAAC,CAAC;MACFH,cAAc,CAACG,UAAU,CAAC;MAC1BN,WAAW,CAAC,CAAC;IACf,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEjB,WAAY;QAACkB,QAAQ,EAAEf;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oCAEzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChB,EAAA,CAzBQH,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA2BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}