{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\LogsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogsPage() {\n  _s();\n  const [backendLogs, setBackendLogs] = useState([]);\n  const [frontendLogs, setFrontendLogs] = useState([]);\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [logContent, setLogContent] = useState(\"\");\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n  const fetchLogs = async () => {\n    try {\n      const backendRes = await axios.get(\"http://localhost:8000/logs/backend\");\n      setBackendLogs(backendRes.data);\n      const frontendRes = await axios.get(\"http://localhost:8000/logs/frontend\");\n      setFrontendLogs(frontendRes.data);\n    } catch (error) {\n      console.error(\"Error fetching logs:\", error);\n    }\n  };\n  const handleSelectLog = async (type, filename) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/logs/${type}/${filename}`);\n      setSelectedLog(filename);\n      setLogContent(res.data.content);\n    } catch (error) {\n      console.error(\"Error fetching log content:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Backend Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: backendLogs.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectLog(\"backend\", file),\n            children: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Frontend Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: frontendLogs.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectLog(\"frontend\", file),\n            children: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedLog && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: \"#f0f0f0\",\n          padding: \"10px\"\n        },\n        children: logContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(LogsPage, \"W1ecSpxPiVxagyV89ZBVRw3XAIU=\");\n_c = LogsPage;\nexport default LogsPage;\nvar _c;\n$RefreshReg$(_c, \"LogsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","LogsPage","_s","backendLogs","setBackendLogs","frontendLogs","setFrontendLogs","selectedLog","setSelectedLog","logContent","setLogContent","fetchLogs","backendRes","get","data","frontendRes","error","console","handleSelectLog","type","filename","res","content","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","onClick","background","padding","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/LogsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction LogsPage() {\r\n  const [backendLogs, setBackendLogs] = useState([]);\r\n  const [frontendLogs, setFrontendLogs] = useState([]);\r\n  const [selectedLog, setSelectedLog] = useState(null);\r\n  const [logContent, setLogContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n  }, []);\r\n\r\n  const fetchLogs = async () => {\r\n    try {\r\n      const backendRes = await axios.get(\"http://localhost:8000/logs/backend\");\r\n      setBackendLogs(backendRes.data);\r\n      const frontendRes = await axios.get(\"http://localhost:8000/logs/frontend\");\r\n      setFrontendLogs(frontendRes.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching logs:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSelectLog = async (type, filename) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:8000/logs/${type}/${filename}`);\r\n      setSelectedLog(filename);\r\n      setLogContent(res.data.content);\r\n    } catch (error) {\r\n      console.error(\"Error fetching log content:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <h2>Logs</h2>\r\n      <div>\r\n        <h3>Backend Logs</h3>\r\n        <ul>\r\n          {backendLogs.map((file) => (\r\n            <li key={file}>\r\n              <button onClick={() => handleSelectLog(\"backend\", file)}>{file}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Frontend Logs</h3>\r\n        <ul>\r\n          {frontendLogs.map((file) => (\r\n            <li key={file}>\r\n              <button onClick={() => handleSelectLog(\"frontend\", file)}>{file}</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {selectedLog && (\r\n        <div>\r\n          <h3>{selectedLog}</h3>\r\n          <pre style={{ background: \"#f0f0f0\", padding: \"10px\" }}>{logContent}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}