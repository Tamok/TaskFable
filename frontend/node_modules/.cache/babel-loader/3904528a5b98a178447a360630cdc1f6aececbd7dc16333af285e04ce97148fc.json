{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Shenanigans\\\\TaskFable\\\\frontend\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CONFIG from \"../config\";\nimport { logFrontendEvent } from \"../utils/logger\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card({\n  task,\n  refreshTasks,\n  user\n}) {\n  _s();\n  const [isEditingDescription, setIsEditingDescription] = useState(false);\n  const [newDescription, setNewDescription] = useState(task.description);\n  const [commentText, setCommentText] = useState(\"\");\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\n  const [showHistory, setShowHistory] = useState(false);\n  let availableStatuses = [];\n  if (task.status === \"To-Do\") {\n    availableStatuses = [\"Doing\"];\n  } else if (task.status === \"Doing\") {\n    availableStatuses = [\"Waiting\", \"Done\"];\n  } else if (task.status === \"Waiting\") {\n    availableStatuses = [\"Doing\", \"Done\"];\n  }\n\n  // If the task is locked and viewer is not owner, disable actions.\n  const isOwner = task.owner_username === user.username;\n  const canAct = !task.locked || isOwner;\n  const handleStatusChange = async newStatus => {\n    if (task.status === \"To-Do\" && newStatus === \"Doing\" && !user.skip_confirm_begin) {\n      const confirmed = window.confirm(\"Once you begin your adventure, there is no turning back. Proceed?\");\n      if (!confirmed) return;\n    }\n    if (newStatus === \"Done\" && !user.skip_confirm_end) {\n      const confirmed = window.confirm(\"Ending your adventure will conclude your journey. Are you sure you want to finish?\");\n      if (!confirmed) return;\n    }\n    try {\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/${task.id}/status`, {\n        new_status: newStatus,\n        username: user.username\n      });\n      refreshTasks();\n      logFrontendEvent(`Task ${task.id} status changed to ${newStatus} by ${user.username}`);\n    } catch (error) {\n      console.error(\"Error updating task status:\", error);\n    }\n  };\n  const handleAddComment = async () => {\n    if (!commentText) return;\n    try {\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks/comment`, {\n        task_id: task.id,\n        content: commentText,\n        username: user.username\n      });\n      setCommentText(\"\");\n      refreshTasks();\n      logFrontendEvent(`Comment added to task ${task.id} by ${user.username}`);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleEditDescription = async () => {\n    try {\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/${task.id}/edit?username=${user.username}`, {\n        description: newDescription\n      });\n      setIsEditingDescription(false);\n      refreshTasks();\n      logFrontendEvent(`Task ${task.id} description edited by ${user.username}`);\n    } catch (error) {\n      console.error(\"Error editing description:\", error);\n    }\n  };\n  const handleEditComment = async commentId => {\n    try {\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/comment/edit`, {\n        comment_id: commentId,\n        new_content: editingCommentText,\n        username: user.username\n      });\n      setEditingCommentId(null);\n      setEditingCommentText(\"\");\n      refreshTasks();\n      logFrontendEvent(`Comment ${commentId} edited by ${user.username}`);\n    } catch (error) {\n      console.error(\"Error editing comment:\", error);\n    }\n  };\n\n  // For private tasks, show title as \"Solo Adventure\" but always display owner.\n  if (task.is_private && !isOwner) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${task.color}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Solo Adventure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"Owner: \", task.owner_username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  const filteredHistory = showHistory ? task.history : task.history.filter(h => h.status === \"Created\" || h.status === \"Done\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${task.color}`,\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\"\n      },\n      children: isOwner && task.status !== \"Done\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => setIsEditingDescription(true),\n        title: \"Edit description\",\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [task.title, \" \", task.is_private && /*#__PURE__*/_jsxDEV(\"span\", {\n        title: \"Private Task\",\n        children: \"\\uD83D\\uDD12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 42\n      }, this), \" \", task.locked && /*#__PURE__*/_jsxDEV(\"span\", {\n        title: \"Locked Task\",\n        children: \"\\uD83D\\uDD10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Owner: \", task.owner_username, task.co_owners && task.co_owners.length > 0 && ` | Co-owners: ${task.co_owners.join(\", \")}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: isEditingDescription ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newDescription,\n          onChange: e => setNewDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditDescription,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditingDescription(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-actions\",\n      children: availableStatuses.map(status => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => canAct && handleStatusChange(status),\n        disabled: !canAct,\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), task.comments && task.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.owner_username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), \" \", editingCommentId === comment.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingCommentText,\n            onChange: e => setEditingCommentText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditComment(comment.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingCommentId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), comment.owner_username === user.username && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => {\n              setEditingCommentId(comment.id);\n              setEditingCommentText(comment.content);\n            },\n            title: \"Edit comment\",\n            children: \"\\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"History\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHistory(!showHistory),\n          style: {\n            marginLeft: \"5px\"\n          },\n          title: \"Toggle full history\",\n          children: showHistory ? \"−\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), filteredHistory.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-entry\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [entry.status, \" at \", new Date(entry.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"bvUKfbI8Ku0hz+a7/hW3vKN+/PA=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","axios","CONFIG","logFrontendEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","task","refreshTasks","user","_s","isEditingDescription","setIsEditingDescription","newDescription","setNewDescription","description","commentText","setCommentText","editingCommentId","setEditingCommentId","editingCommentText","setEditingCommentText","showHistory","setShowHistory","availableStatuses","status","isOwner","owner_username","username","canAct","locked","handleStatusChange","newStatus","skip_confirm_begin","confirmed","window","confirm","skip_confirm_end","put","BACKEND_URL","id","new_status","error","console","handleAddComment","post","task_id","content","handleEditDescription","handleEditComment","commentId","comment_id","new_content","is_private","className","color","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredHistory","history","filter","h","style","position","top","right","onClick","title","co_owners","length","join","value","onChange","e","target","map","disabled","comments","comment","type","placeholder","marginLeft","entry","idx","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["D:/Coding Shenanigans/TaskFable/frontend/src/components/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CONFIG from \"../config\";\r\nimport { logFrontendEvent } from \"../utils/logger\";\r\n\r\nfunction Card({ task, refreshTasks, user }) {\r\n  const [isEditingDescription, setIsEditingDescription] = useState(false);\r\n  const [newDescription, setNewDescription] = useState(task.description);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [editingCommentId, setEditingCommentId] = useState(null);\r\n  const [editingCommentText, setEditingCommentText] = useState(\"\");\r\n  const [showHistory, setShowHistory] = useState(false);\r\n\r\n  let availableStatuses = [];\r\n  if (task.status === \"To-Do\") {\r\n    availableStatuses = [\"Doing\"];\r\n  } else if (task.status === \"Doing\") {\r\n    availableStatuses = [\"Waiting\", \"Done\"];\r\n  } else if (task.status === \"Waiting\") {\r\n    availableStatuses = [\"Doing\", \"Done\"];\r\n  }\r\n\r\n  // If the task is locked and viewer is not owner, disable actions.\r\n  const isOwner = task.owner_username === user.username;\r\n  const canAct = !task.locked || isOwner;\r\n\r\n  const handleStatusChange = async (newStatus) => {\r\n    if (task.status === \"To-Do\" && newStatus === \"Doing\" && !user.skip_confirm_begin) {\r\n      const confirmed = window.confirm(\"Once you begin your adventure, there is no turning back. Proceed?\");\r\n      if (!confirmed) return;\r\n    }\r\n    if (newStatus === \"Done\" && !user.skip_confirm_end) {\r\n      const confirmed = window.confirm(\"Ending your adventure will conclude your journey. Are you sure you want to finish?\");\r\n      if (!confirmed) return;\r\n    }\r\n    try {\r\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/${task.id}/status`, {\r\n        new_status: newStatus,\r\n        username: user.username\r\n      });\r\n      refreshTasks();\r\n      logFrontendEvent(`Task ${task.id} status changed to ${newStatus} by ${user.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error updating task status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (!commentText) return;\r\n    try {\r\n      await axios.post(`${CONFIG.BACKEND_URL}/tasks/comment`, {\r\n        task_id: task.id,\r\n        content: commentText,\r\n        username: user.username\r\n      });\r\n      setCommentText(\"\");\r\n      refreshTasks();\r\n      logFrontendEvent(`Comment added to task ${task.id} by ${user.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditDescription = async () => {\r\n    try {\r\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/${task.id}/edit?username=${user.username}`, {\r\n        description: newDescription\r\n      });\r\n      setIsEditingDescription(false);\r\n      refreshTasks();\r\n      logFrontendEvent(`Task ${task.id} description edited by ${user.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error editing description:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditComment = async (commentId) => {\r\n    try {\r\n      await axios.put(`${CONFIG.BACKEND_URL}/tasks/comment/edit`, {\r\n        comment_id: commentId,\r\n        new_content: editingCommentText,\r\n        username: user.username\r\n      });\r\n      setEditingCommentId(null);\r\n      setEditingCommentText(\"\");\r\n      refreshTasks();\r\n      logFrontendEvent(`Comment ${commentId} edited by ${user.username}`);\r\n    } catch (error) {\r\n      console.error(\"Error editing comment:\", error);\r\n    }\r\n  };\r\n\r\n  // For private tasks, show title as \"Solo Adventure\" but always display owner.\r\n  if (task.is_private && !isOwner) {\r\n    return (\r\n      <div className={`card ${task.color}`}>\r\n        <h3>Solo Adventure</h3>\r\n        <p><em>Owner: {task.owner_username}</em></p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const filteredHistory = showHistory ? task.history : task.history.filter(h => h.status === \"Created\" || h.status === \"Done\");\r\n\r\n  return (\r\n    <div className={`card ${task.color}`} style={{ position: \"relative\" }}>\r\n      <div style={{ position: \"absolute\", top: \"5px\", right: \"5px\" }}>\r\n        {/* If editing is allowed, show small edit icon in top-right corner */}\r\n        {isOwner && task.status !== \"Done\" && (\r\n          <button className=\"edit-button\" onClick={() => setIsEditingDescription(true)} title=\"Edit description\">✎</button>\r\n        )}\r\n      </div>\r\n      <h3>\r\n        {task.title} {task.is_private && <span title=\"Private Task\">🔒</span>} {task.locked && <span title=\"Locked Task\">🔐</span>}\r\n        <br />\r\n        <small>Owner: {task.owner_username}{task.co_owners && task.co_owners.length > 0 && ` | Co-owners: ${task.co_owners.join(\", \")}`}</small>\r\n      </h3>\r\n      <div className=\"description\">\r\n        {isEditingDescription ? (\r\n          <>\r\n            <textarea value={newDescription} onChange={(e) => setNewDescription(e.target.value)} />\r\n            <button onClick={handleEditDescription}>Save</button>\r\n            <button onClick={() => setIsEditingDescription(false)}>Cancel</button>\r\n          </>\r\n        ) : (\r\n          <p>{task.description}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"card-actions\">\r\n        {availableStatuses.map((status) => (\r\n          <button key={status} onClick={() => canAct && handleStatusChange(status)} disabled={!canAct}>\r\n            {status}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"comments\">\r\n        <h4>Comments</h4>\r\n        {task.comments && task.comments.map((comment) => (\r\n          <div key={comment.id} className=\"comment\" style={{ position: \"relative\" }}>\r\n            <strong>{comment.owner_username}:</strong>{\" \"}\r\n            {editingCommentId === comment.id ? (\r\n              <>\r\n                <input type=\"text\" value={editingCommentText} onChange={(e) => setEditingCommentText(e.target.value)} />\r\n                <button onClick={() => handleEditComment(comment.id)}>Save</button>\r\n                <button onClick={() => setEditingCommentId(null)}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span>{comment.content}</span>\r\n                {comment.owner_username === user.username && (\r\n                  <button className=\"edit-button\" onClick={() => { setEditingCommentId(comment.id); setEditingCommentText(comment.content); }} title=\"Edit comment\">✎</button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <input type=\"text\" placeholder=\"Add a comment...\" value={commentText} onChange={(e) => setCommentText(e.target.value)} />\r\n        <button onClick={handleAddComment}>Add Comment</button>\r\n      </div>\r\n      <div className=\"history\">\r\n        <h4>\r\n          History\r\n          <button onClick={() => setShowHistory(!showHistory)} style={{ marginLeft: \"5px\" }} title=\"Toggle full history\">\r\n            {showHistory ? \"−\" : \"+\"}\r\n          </button>\r\n        </h4>\r\n        {filteredHistory.map((entry, idx) => (\r\n          <div key={idx} className=\"history-entry\">\r\n            <span>{entry.status} at {new Date(entry.timestamp).toLocaleString()}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}